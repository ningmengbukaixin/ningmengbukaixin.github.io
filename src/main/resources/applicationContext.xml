<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
        xmlns:tx="http://www.springframework.org/schema/tx"

        xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 指定配置文件 -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <bean id="dataSource" p:username="${user}"  class="com.alibaba.druid.pool.DruidDataSource">
        <!-- <property name="driverClassName" value="${driverClassName}"></property>-->
        <property name="url" value="${url}"></property>
        <!--<property name="username" value="${user}"></property>-->
        <property name="password" value="${password}"></property>
        <property name="initialSize" value="${initialSize}"></property>
        <property name="minIdle" value="${minIdle}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="maxWait" value="${maxWait}"></property>
        <property name="filters" value="${filters}"/>
    </bean>


    <!-- 配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" p:dataSource-ref="dataSource" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--
                <property name="dataSource" ref="dataSource"></property>
        -->
        <!-- 指定mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 注册mybatis映射文件 -->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
        <!--指定别名 该包下面的所有类的全限定类名的别名同简单类名-->
        <property name="typeAliasesPackage" value="com.wangxin.demo.pojo"/>

    </bean>
    <!-- 指定mapper接口所在的包 -->
    <!--<mybatis-spring:scan base-package="com.wanmait.demo.mapper"/>
-->

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.wangxin.demo.mapper"/>
    </bean>
    <!--事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 指定扫描的包  spring会扫描该包及子包下面的类  如果需要spring管理 那么在spring框架加载时会管理-->
    <context:component-scan base-package="com.wangxin.demo.service"></context:component-scan>


</beans>
